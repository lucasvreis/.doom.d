(undo-tree-save-format-version . 1)
"c8c1ec380ea7ca010d6f1cf25109720d8a92bd91"
[nil nil nil nil (24630 27841 5021 126000) 0 nil]
([nil nil ((1158 . 1163) (t 24629 32066 202092 981000)) nil (24630 27841 5020 211000) 0 nil])
([nil nil (("doom-" . 1158) (t 24630 19971 574068 355000)) nil (24630 27841 5019 645000) 0 nil])
([nil nil ((1158 . 1163)) nil (24630 27841 5019 145000) 0 nil])
([nil nil ((" ;" . 2830) (2830 . 2832) ("
" . -2733) (" " . -2734) (" " . -2735) 2736 (2733 . 2736) (" " . 2717) (" " . 2717) (" " . 2717) (" " . 2717) (2627 . 2629) (2595 . 2597) (2711 . 2717) (2727 . 2728) (")" . -2594) 2595 (")" . -2595) 2596 (2576 . 2593) ("display-gra" . -2576) 2587 (2576 . 2587) ("display-gr" . -2576) 2586 (2583 . 2586) (2576 . 2583) ("(" . -2576) ("d" . -2577) ("i" . -2578) ("s" . -2579) ("p" . -2580) ("l" . -2581) ("a" . -2582) ("y" . -2583) 2584 (2577 . 2584) (2576 . 2578) ("(" . -2576) (2576 . 2577) (2575 . 2577) ("(" . -2575) (2574 . 2576) (2570 . 2574) (2569 . 2571) ("(" . -2569) (2569 . 2570) (";" . -2569) (";" . -2570) (" " . -2571) 2572 ("
" . 2572) (2569 . 2572) (2568 . 2570) (t 24630 19971 574068 355000)) nil (24630 27841 5016 485000) 0 nil])
([nil nil ((2810 . 2812) (t 24630 21636 360753 711000)) nil (24630 27874 790044 716000) 0 nil])
([nil nil ((#("
(setq gc-cons-threshold  80000000)" 0 1 (fontified t) 1 2 (fontified t face (rainbow-delimiters-depth-1-face)) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 8 (fontified t face font-lock-variable-name-face) 8 9 (fontified t face font-lock-variable-name-face) 9 10 (fontified t face font-lock-variable-name-face) 10 11 (fontified t face font-lock-variable-name-face) 11 12 (fontified t face font-lock-variable-name-face) 12 13 (fontified t face font-lock-variable-name-face) 13 14 (fontified t face font-lock-variable-name-face) 14 15 (fontified t face font-lock-variable-name-face) 15 16 (fontified t face font-lock-variable-name-face) 16 17 (fontified t face font-lock-variable-name-face) 17 18 (fontified t face font-lock-variable-name-face) 18 19 (fontified t face font-lock-variable-name-face) 19 20 (fontified t face font-lock-variable-name-face) 20 21 (fontified t face font-lock-variable-name-face) 21 22 (fontified t face font-lock-variable-name-face) 22 23 (fontified t face font-lock-variable-name-face) 23 24 (fontified t face font-lock-variable-name-face) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t face highlight-numbers-number) 27 28 (fontified t face highlight-numbers-number) 28 29 (fontified t face highlight-numbers-number) 29 30 (fontified t face highlight-numbers-number) 30 31 (fontified t face highlight-numbers-number) 31 32 (fontified t face highlight-numbers-number) 32 33 (fontified t face highlight-numbers-number) 33 34 (fontified t face highlight-numbers-number) 34 35 (fontified t face (rainbow-delimiters-depth-1-face))) . 2842) (undo-tree-id754 . -35) (undo-tree-id755 . -35) (undo-tree-id756 . -35) (undo-tree-id757 . -35) (undo-tree-id758 . -35) (undo-tree-id759 . -1) (undo-tree-id760 . -35)) ((2842 . 2877)) (24630 27888 65623 728000) 0 nil])
([nil nil ((2930 . 2931)) ((#("
" 0 1 (fontified t)) . 2930)) (24630 27888 562678 715000) 0 nil])
([nil nil ((3196 . 3204) (#("a" 0 1 (fontified nil)) . 3196) (3196 . 3197)) ((#("a" 0 1 (fontified nil)) . 3196) (3196 . 3197) (#("aakoakda" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t)) . 3196) (undo-tree-id747 . -8) (undo-tree-id748 . -8) (undo-tree-id749 . -8) (undo-tree-id751 . -8) (undo-tree-id753 . -8)) (24630 27888 623768 499000) 0 nil])
([nil nil ((#("aakoakda" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t)) . 3196)) ((3196 . 3204)) (24630 27888 627657 376000) 0 nil])
([nil nil ((nil ws-butler-chg nil 3196 . 3197) (nil ws-butler-chg delete 3196 . 3197) (3188 . 3196) (#("buffer)
" 0 6 (fontified t face highlight-quoted-symbol) 6 7 (fontified t face (rainbow-delimiters-depth-1-face)) 7 8 (fontified t)) . 3188) (undo-tree-id761 . -8) (undo-tree-id762 . -8) (undo-tree-id763 . -8) (undo-tree-id764 . -8) (undo-tree-id765 . -8) (undo-tree-id766 . -8) (undo-tree-id767 . -8) (undo-tree-id768 . -8) (undo-tree-id769 . -8) (nil ws-butler-chg nil 3196 . 3197) (#("oaisd asi d" 0 6 (fontified nil) 6 10 (fontified nil) 10 11 (fontified nil)) . 3196) (3196 . 3207)) ((#("oaisd asi d" 0 6 (fontified nil) 6 10 (fontified nil) 10 11 (fontified nil)) . 3196) (3196 . 3207) (nil ws-butler-chg nil 3196 . 3197) (nil ws-butler-chg delete 3196 . 3197) (3188 . 3196) (#("buffer)
" 0 4 (fontified t face highlight-quoted-symbol) 4 6 (fontified t face highlight-quoted-symbol) 6 7 (fontified t face (rainbow-delimiters-depth-1-face)) 7 8 (fontified t)) . 3188) (undo-tree-id392 . -8) (undo-tree-id393 . -8) (undo-tree-id394 . -8) (undo-tree-id395 . -8) (undo-tree-id396 . -8) (undo-tree-id397 . -8) (undo-tree-id398 . -8) (undo-tree-id399 . -8) (undo-tree-id400 . -8) (undo-tree-id401 . -8) (undo-tree-id402 . -8) (undo-tree-id403 . -8) (undo-tree-id404 . -8) (undo-tree-id405 . -8) (undo-tree-id406 . -8) (undo-tree-id407 . -8) (undo-tree-id408 . -8) (undo-tree-id409 . -8) (undo-tree-id410 . -8) (undo-tree-id411 . -8) (undo-tree-id412 . -8) (undo-tree-id413 . -8) (undo-tree-id414 . -8) (undo-tree-id415 . -8) (undo-tree-id416 . -8) (undo-tree-id417 . -8) (undo-tree-id418 . -8) (undo-tree-id419 . -8) (undo-tree-id420 . -8) (undo-tree-id421 . -8) (undo-tree-id422 . -8) (undo-tree-id423 . -8) (undo-tree-id424 . -8) (undo-tree-id425 . -8) (undo-tree-id426 . -8) (undo-tree-id427 . -8) (undo-tree-id428 . -8) (undo-tree-id429 . -8) (undo-tree-id430 . -8) (undo-tree-id431 . -8) (undo-tree-id432 . -8) (undo-tree-id433 . -8) (undo-tree-id434 . -8) (undo-tree-id435 . -8) (undo-tree-id436 . -8) (undo-tree-id437 . -8) (undo-tree-id438 . -8) (undo-tree-id439 . -8) (undo-tree-id440 . -8) (undo-tree-id441 . -8) (undo-tree-id442 . -8) (undo-tree-id443 . -8) (undo-tree-id444 . -8) (undo-tree-id445 . -8) (undo-tree-id446 . -8) (undo-tree-id447 . -8) (undo-tree-id448 . -8) (undo-tree-id449 . -8) (undo-tree-id450 . -8) (undo-tree-id451 . -8) (undo-tree-id452 . -8) (undo-tree-id453 . -8) (undo-tree-id454 . -8) (undo-tree-id455 . -8) (undo-tree-id456 . -8) (undo-tree-id457 . -8) (undo-tree-id458 . -8) (undo-tree-id459 . -8) (undo-tree-id460 . -8) (undo-tree-id461 . -8) (undo-tree-id462 . -8) (undo-tree-id463 . -8) (undo-tree-id464 . -8) (undo-tree-id465 . -8) (undo-tree-id466 . -8) (undo-tree-id467 . -8) (undo-tree-id468 . -8) (undo-tree-id469 . -8) (undo-tree-id470 . -8) (undo-tree-id471 . -8) (undo-tree-id472 . -8) (undo-tree-id473 . -8) (undo-tree-id474 . -8) (undo-tree-id475 . -8) (undo-tree-id476 . -8) (undo-tree-id477 . -8) (undo-tree-id478 . -8) (undo-tree-id479 . -8) (undo-tree-id480 . -8) (undo-tree-id481 . -8) (undo-tree-id482 . -8) (undo-tree-id483 . -8) (undo-tree-id484 . -8) (undo-tree-id485 . -8) (undo-tree-id486 . -8) (undo-tree-id487 . -8) (undo-tree-id488 . -8) (undo-tree-id489 . -8) (undo-tree-id490 . -8) (undo-tree-id491 . -8) (undo-tree-id492 . -8) (undo-tree-id493 . -8) (undo-tree-id494 . -8) (undo-tree-id495 . -8) (undo-tree-id496 . -8) (undo-tree-id497 . -8) (undo-tree-id498 . -8) (undo-tree-id499 . -8) (undo-tree-id500 . -8) (undo-tree-id501 . -8) (undo-tree-id502 . -8) (undo-tree-id503 . -8) (undo-tree-id504 . -8) (undo-tree-id505 . -8) (undo-tree-id506 . -8) (undo-tree-id507 . -8) (undo-tree-id508 . -8) (undo-tree-id509 . -8) (undo-tree-id510 . -8) (undo-tree-id511 . -8) (undo-tree-id512 . -8) (undo-tree-id513 . -8) (undo-tree-id514 . -8) (undo-tree-id515 . -8) (undo-tree-id516 . -8) (undo-tree-id517 . -8) (undo-tree-id518 . -8) (undo-tree-id519 . -8) (undo-tree-id520 . -8) (undo-tree-id521 . -8) (undo-tree-id522 . -8) (undo-tree-id523 . -8) (undo-tree-id524 . -8) (undo-tree-id525 . -8) (undo-tree-id526 . -8) (undo-tree-id527 . -8) (undo-tree-id528 . -8) (undo-tree-id529 . -8) (undo-tree-id530 . -8) (undo-tree-id531 . -8) (undo-tree-id532 . -8) (undo-tree-id533 . -8) (undo-tree-id534 . -8) (undo-tree-id535 . -8) (undo-tree-id536 . -8) (undo-tree-id537 . -8) (undo-tree-id538 . -8) (undo-tree-id539 . -8) (undo-tree-id540 . -8) (undo-tree-id541 . -8) (undo-tree-id542 . -8) (undo-tree-id543 . -8) (undo-tree-id544 . -8) (undo-tree-id545 . -8) (undo-tree-id546 . -8) (undo-tree-id547 . -8) (undo-tree-id548 . -8) (undo-tree-id549 . -8) (undo-tree-id550 . -8) (undo-tree-id551 . -8) (undo-tree-id552 . -8) (undo-tree-id553 . -8) (undo-tree-id554 . -8) (undo-tree-id555 . -8) (undo-tree-id556 . -8) (undo-tree-id557 . -8) (undo-tree-id558 . -8) (undo-tree-id559 . -8) (undo-tree-id560 . -8) (undo-tree-id561 . -8) (undo-tree-id562 . -8) (undo-tree-id563 . -8) (undo-tree-id564 . -8) (undo-tree-id565 . -8) (undo-tree-id566 . -8) (undo-tree-id567 . -8) (undo-tree-id568 . -8) (undo-tree-id569 . -8) (undo-tree-id570 . -8) (undo-tree-id571 . -8) (undo-tree-id572 . -8) (undo-tree-id573 . -8) (undo-tree-id574 . -8) (undo-tree-id575 . -8) (undo-tree-id576 . -8) (undo-tree-id577 . -8) (undo-tree-id578 . -8) (undo-tree-id579 . -8) (undo-tree-id580 . -8) (undo-tree-id581 . -8) (undo-tree-id582 . -8) (undo-tree-id583 . -8) (undo-tree-id584 . -8) (undo-tree-id585 . -8) (undo-tree-id586 . -8) (undo-tree-id587 . -8) (undo-tree-id588 . -8) (undo-tree-id589 . -8) (undo-tree-id590 . -8) (undo-tree-id591 . -8) (undo-tree-id592 . -8) (undo-tree-id593 . -8) (undo-tree-id594 . -8) (undo-tree-id595 . -8) (undo-tree-id596 . -8) (undo-tree-id597 . -8) (undo-tree-id598 . -8) (undo-tree-id599 . -8) (undo-tree-id600 . -8) (undo-tree-id601 . -8) (undo-tree-id602 . -8) (undo-tree-id603 . -8) (undo-tree-id604 . -8) (undo-tree-id605 . -8) (undo-tree-id606 . -8) (undo-tree-id607 . -8) (undo-tree-id608 . -8) (undo-tree-id609 . -8) (undo-tree-id610 . -8) (undo-tree-id611 . -8) (undo-tree-id612 . -8) (undo-tree-id613 . -8) (undo-tree-id614 . -8) (undo-tree-id615 . -8) (undo-tree-id616 . -8) (undo-tree-id617 . -8) (undo-tree-id618 . -8) (undo-tree-id619 . -8) (undo-tree-id620 . -8) (undo-tree-id621 . -8) (undo-tree-id622 . -8) (undo-tree-id623 . -8) (undo-tree-id624 . -8) (undo-tree-id625 . -8) (undo-tree-id626 . -8) (undo-tree-id627 . -8) (undo-tree-id628 . -8) (undo-tree-id629 . -8) (undo-tree-id630 . -8) (undo-tree-id631 . -8) (undo-tree-id632 . -8) (undo-tree-id633 . -8) (undo-tree-id634 . -8) (undo-tree-id635 . -8) (undo-tree-id636 . -8) (undo-tree-id637 . -8) (undo-tree-id638 . -8) (undo-tree-id639 . -8) (undo-tree-id640 . -8) (undo-tree-id641 . -8) (undo-tree-id642 . -8) (undo-tree-id643 . -8) (undo-tree-id644 . -8) (undo-tree-id645 . -8) (undo-tree-id646 . -8) (undo-tree-id647 . -8) (undo-tree-id648 . -8) (undo-tree-id649 . -8) (undo-tree-id650 . -8) (undo-tree-id651 . -8) (undo-tree-id652 . -8) (undo-tree-id653 . -8) (undo-tree-id654 . -8) (undo-tree-id655 . -8) (undo-tree-id656 . -8) (undo-tree-id657 . -8) (undo-tree-id658 . -8) (undo-tree-id659 . -8) (undo-tree-id660 . -8) (undo-tree-id661 . -8) (undo-tree-id662 . -8) (undo-tree-id663 . -8) (undo-tree-id664 . -8) (undo-tree-id665 . -8) (undo-tree-id666 . -8) (undo-tree-id667 . -8) (undo-tree-id668 . -8) (undo-tree-id669 . -8) (undo-tree-id670 . -8) (undo-tree-id671 . -8) (undo-tree-id672 . -8) (undo-tree-id673 . -8) (undo-tree-id674 . -8) (undo-tree-id675 . -8) (undo-tree-id676 . -8) (undo-tree-id677 . -8) (undo-tree-id678 . -8) (undo-tree-id679 . -8) (undo-tree-id680 . -8) (undo-tree-id681 . -8) (undo-tree-id682 . -8) (undo-tree-id683 . -8) (undo-tree-id684 . -8) (undo-tree-id685 . -8) (undo-tree-id686 . -8) (undo-tree-id687 . -8) (undo-tree-id688 . -8) (undo-tree-id689 . -8) (undo-tree-id690 . -8) (undo-tree-id691 . -8) (undo-tree-id692 . -8) (undo-tree-id693 . -8) (undo-tree-id694 . -8) (undo-tree-id695 . -8) (undo-tree-id696 . -8) (undo-tree-id697 . -8) (undo-tree-id698 . -8) (undo-tree-id699 . -8) (undo-tree-id700 . -8) (undo-tree-id701 . -8) (undo-tree-id702 . -8) (undo-tree-id703 . -8) (undo-tree-id704 . -8) (undo-tree-id705 . -8) (undo-tree-id706 . -8) (undo-tree-id707 . -8) (undo-tree-id708 . -8) (undo-tree-id709 . -8) (undo-tree-id710 . -8) (undo-tree-id711 . -8) (undo-tree-id712 . -8) (undo-tree-id713 . -8) (undo-tree-id714 . -8) (undo-tree-id715 . -8) (undo-tree-id716 . -8) (undo-tree-id717 . -8) (undo-tree-id718 . -8) (undo-tree-id719 . -8) (undo-tree-id720 . -8) (undo-tree-id721 . -8) (undo-tree-id722 . -8) (undo-tree-id723 . -8) (undo-tree-id724 . -8) (undo-tree-id725 . -8) (undo-tree-id726 . -8) (undo-tree-id727 . -8) (undo-tree-id728 . -8) (undo-tree-id729 . -8) (undo-tree-id730 . -8) (undo-tree-id731 . -8) (undo-tree-id732 . -8) (undo-tree-id733 . -8) (undo-tree-id734 . -8) (undo-tree-id735 . -8) (undo-tree-id736 . -8) (undo-tree-id737 . -8) (undo-tree-id738 . -8) (undo-tree-id739 . -8) (undo-tree-id740 . -8) (undo-tree-id741 . -8) (undo-tree-id742 . -8) (undo-tree-id743 . -8) (undo-tree-id744 . -8) (undo-tree-id745 . -8) (undo-tree-id746 . -8) (nil ws-butler-chg nil 3196 . 3197)) (24630 27888 655746 151000) 0 nil])
([nil nil ((#("d" 0 1 (fontified nil)) . 2817) (2817 . 2818)) ((#("d" 0 1 (fontified nil)) . 2817) (2817 . 2818)) (24630 27888 683472 213000) 0 nil])
([nil nil ((#("k" 0 1 (fontified nil)) . 2816) (2816 . 2817)) ((#("k" 0 1 (fontified nil)) . 2816) (2816 . 2817)) (24630 27888 714255 851000) 0 nil])
([nil nil ((1689 . 1690) (1695 . 1697) (#("e" 0 1 (fontified nil)) . 1695) (1689 . 1696) (#("t" 0 1 (fontified t)) . 1689)) ((1689 . 1690) (#("relatie" 0 6 (fontified nil face highlight-quoted-symbol) 6 7 (fontified nil)) . 1689) (1695 . 1696) (#("ve" 0 2 (fontified nil face highlight-quoted-symbol)) . 1695) (#("'" 0 1 (fontified t face highlight-quoted-quote)) . 1689) (t 24630 22543 170763 860000)) (24630 27888 745941 583000) 0 nil])
([nil current ((2877 . 2884) (#("_" 0 1 (fontified t ws-butler-chg chg)) . -2877) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (#("0" 0 1 (fontified t ws-butler-chg chg)) . -2878) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (#("0" 0 1 (fontified t ws-butler-chg chg)) . -2879) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) 2880 (2874 . 2880) (2857 . 2874) (#("gc-cons-" 0 8 (fontified t ws-butler-chg chg)) . -2857) (undo-tree-id779 . -8) (undo-tree-id780 . -8) (undo-tree-id781 . -8) 2865 (2857 . 2865) (#("gc-con" 0 6 (fontified t ws-butler-chg chg)) . -2857) (undo-tree-id782 . -6) (undo-tree-id783 . -6) (undo-tree-id784 . -6) 2863 (2852 . 2863) (2851 . 2853) (#("(" 0 1 (fontified nil ws-butler-chg chg)) . -2851) (2851 . 2852) (2850 . 2851) (t 24630 22543 170763 860000) 2849) nil (24630 27912 176132 287000) 0 nil])
nil
